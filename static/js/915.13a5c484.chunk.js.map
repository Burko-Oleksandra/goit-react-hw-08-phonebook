{"version":3,"file":"static/js/915.13a5c484.chunk.js","mappings":"oRAEaA,EAAOC,EAAAA,EAAAA,IAAH,wRAUK,SAAAC,GAAK,oBAAWA,EAAMC,OAAjB,QAIdC,EAAOH,EAAAA,EAAAA,KAAH,oNAUJI,EAAYJ,EAAAA,EAAAA,IAAH,yFAMTK,EAAaL,EAAAA,EAAAA,MAAH,qTAiBVM,EAAYN,EAAAA,EAAAA,MAAH,6RAgBTO,EAAYP,EAAAA,EAAAA,OAAH,2VAwBTQ,GARgBR,EAAAA,EAAAA,OAAH,yCAIIA,EAAAA,EAAAA,OAAH,wCAIDA,EAAAA,EAAAA,OAAH,2V,SC1ER,SAASS,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA4CC,EAAAA,EAAAA,MAA5C,eAAOC,EAAP,YAAoBC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,SAC/BC,EAAAA,EAAAA,YAAU,WACRD,GAAWE,MAAM,4BAClB,GAAE,CAACH,EAAWC,IAEf,IAAMG,EAAoB,SAAC,GAAwC,IAAD,IAArCC,cAAiBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAClD,OAAQD,GACN,IAAK,QACHX,EAASY,GACT,MACF,IAAK,WACHV,EAAYU,GACZ,MACF,QACE,OAEL,EAaGC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMf,OACE,UAAC7B,EAAD,CAAMG,OAAQ2B,EAAd,UACGZ,IAAa,SAAC,KAAD,CAAUa,GAAG,YAAYC,SAAS,KAChD,UAAC5B,EAAD,CAAM6B,aAAa,MAAMC,SArBR,SAAAC,GACnBA,EAAMC,iBACNnB,EAAU,CACRL,MAAAA,EACAE,SAAAA,IAEFD,EAAS,IACTE,EAAY,IACZsB,QAAQC,IAAI,IACb,EAYG,WACE,UAACjC,EAAD,YACE,sCACA,SAACC,EAAD,CACEiC,KAAK,QACLC,QAAQ,2EACRC,UAAQ,EACRC,SAAUpB,EACVE,KAAK,QACLC,MAAOb,EACP+B,YAAY,sBAEd,0CACA,SAACpC,EAAD,CACEgC,KAAK,WACLG,SAAUpB,EACVG,MAAOX,EACPU,KAAK,WACLmB,YAAY,4BAGhB,SAACnC,EAAD,CAAWoC,UAAUhC,IAASE,EAAyByB,KAAK,SAA5D,qBAGA,SAAC9B,EAAD,CAAY8B,KAAK,SAASM,QA/BjB,WAAO,IAAD,EACnBnB,GAAiB,OAARE,QAAQ,IAARA,GAAA,UAAAA,EAAUkB,aAAV,eAAiBC,OAAQ,IACnC,EA6BK,uBAMP,C","sources":["pages/LoginPage/loginPage.styled.js","pages/LoginPage/loginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  display: flex;\n  /* flex-direction: column; */\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  height: 500px;\n  background-image: ${props => `url(${props.imgUrl})`};\n  background-repeat: no-repeat;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-left: 140px;\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n`;\n\nexport const LabelWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 24px;\n`;\n\nexport const InputEmail = styled.input`\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  font-size: 18px;\n  width: 200px;\n  height: 10px;\n  padding: 10px;\n  border: 3px solid rgb(239, 186, 211);\n  border-radius: 4px;\n  margin-bottom: 30px;\n  outline: none;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nexport const InputPass = styled.input`\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  font-size: 18px;\n  width: 200px;\n  height: 10px;\n  padding: 10px;\n  border: 3px solid rgb(239, 186, 211);\n  border-radius: 4px;\n  outline: none;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nexport const ButtonLog = styled.button`\n  cursor: pointer;\n  position: absolute;\n  top: 254px;\n  left: 390px;\n  font-family: 'Indie Flower', cursive;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n  padding: 0;\n  box-sizing: content-box;\n  min-width: 70px;\n  font-size: 28px;\n  background-color: inherit;\n  transform: rotate(270deg);\n  border: none;\n`;\n\nexport const ButtonLogTrue = styled.button`\n  color: black;\n`;\n\nexport const ButtonLogFalse = styled.button`\n  color: gray;\n`;\n\nexport const ButtonBack = styled.button`\n  cursor: pointer;\n  font-family: 'Indie Flower', cursive;\n  position: absolute;\n  top: 425px;\n  left: 398px;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n  color: black;\n  padding: 0;\n  width: 70px;\n  font-size: 28px;\n  transform: rotate(270deg);\n  border: none;\n  background-color: rgba(161, 99, 245, 0);\n`;\n","import { useState, useEffect } from 'react';\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport { useUserLoginMutation } from '../../redux/api/authApi';\n\nimport imageBg from '../../images/logIn.png';\nimport {\n  Wrap,\n  Form,\n  LabelWrap,\n  InputEmail,\n  InputPass,\n  ButtonLog,\n  ButtonBack,\n} from './loginPage.styled';\n\nexport default function LoginView() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userLogin, { isSuccess, isError }] = useUserLoginMutation();\n  useEffect(() => {\n    isError && alert('Invalid email or password');\n  }, [isSuccess, isError]);\n\n  const handleInputChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    userLogin({\n      email,\n      password,\n    });\n    setEmail('');\n    setPassword('');\n    console.log(123);\n  };\n\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  const goBack = () => {\n    navigate(location?.state?.from || '/');\n  };\n\n  return (\n    <Wrap imgUrl={imageBg}>\n      {isSuccess && <Navigate to=\"/contacts\" replace={true} />}\n      <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <LabelWrap>\n          <label>Email</label>\n          <InputEmail\n            type=\"email\"\n            pattern=\"^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$\"\n            required\n            onChange={handleInputChange}\n            name=\"email\"\n            value={email}\n            placeholder=\"enter your email\"\n          />\n          <label>Password </label>\n          <InputPass\n            type=\"password\"\n            onChange={handleInputChange}\n            value={password}\n            name=\"password\"\n            placeholder=\"enter your password\"\n          />\n        </LabelWrap>\n        <ButtonLog disabled={email && password ? false : true} type=\"submit\">\n          Log in\n        </ButtonLog>\n        <ButtonBack type=\"button\" onClick={goBack}>\n          Back\n        </ButtonBack>\n      </Form>\n    </Wrap>\n  );\n}\n"],"names":["Wrap","styled","props","imgUrl","Form","LabelWrap","InputEmail","InputPass","ButtonLog","ButtonBack","LoginView","useState","email","setEmail","password","setPassword","useUserLoginMutation","userLogin","isSuccess","isError","useEffect","alert","handleInputChange","currentTarget","name","value","navigate","useNavigate","location","useLocation","imageBg","to","replace","autoComplete","onSubmit","event","preventDefault","console","log","type","pattern","required","onChange","placeholder","disabled","onClick","state","from"],"sourceRoot":""}
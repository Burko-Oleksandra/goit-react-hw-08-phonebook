{"version":3,"file":"static/js/715.132a6844.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/RegisterPage/registerPage.styled.js","pages/RegisterPage/registerPage.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  display: flex;\n  /* flex-direction: column; */\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  height: 500px;\n  background-image: ${props => `url(${props.imgUrl})`};\n  background-repeat: no-repeat;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-left: 140px;\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n`;\n\nexport const LabelWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 24px;\n`;\n\nexport const InputEmail = styled.input`\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  font-size: 18px;\n  width: 200px;\n  height: 10px;\n  padding: 10px;\n  border: 3px solid rgb(239, 186, 211);\n  border-radius: 4px;\n  margin-bottom: 30px;\n  outline: none;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nexport const InputPass = styled.input`\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  font-size: 18px;\n  width: 200px;\n  height: 10px;\n  padding: 10px;\n  border: 3px solid rgb(239, 186, 211);\n  border-radius: 4px;\n  outline: none;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nexport const ButtonReg = styled.button`\n  cursor: pointer;\n  font-family: 'Indie Flower', cursive;\n  position: absolute;\n  top: 246px;\n  left: 377px;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n  padding: 0;\n  /* color: black; */\n  box-sizing: content-box;\n  min-width: 70px;\n  font-size: 28px;\n  background-color: inherit;\n  transform: rotate(270deg);\n  border: none;\n`;\n\nexport const ButtonBack = styled.button`\n  cursor: pointer;\n  font-family: 'Indie Flower', cursive;\n  position: absolute;\n  top: 425px;\n  left: 395px;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n  color: black;\n  padding: 0;\n  width: 70px;\n  font-size: 28px;\n  transform: rotate(270deg);\n  border: none;\n  background-color: rgba(161, 99, 245, 0);\n  /* margin-left: -75px;\n  margin-top: 390px; */\n`;\n","import { useState } from 'react';\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport { useUserSignupMutation } from '../../redux/api/authApi';\nimport imageBg from '../../images/logIn.png';\nimport {\n  Wrap,\n  InputPass,\n  LabelWrap,\n  InputEmail,\n  ButtonReg,\n  ButtonBack,\n  Form,\n} from './registerPage.styled';\n\nexport default function SignupView() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userSignup, { isSuccess }] = useUserSignupMutation();\n\n  const handleInputChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await userSignup({ name, email, password });\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  const goBack = () => {\n    navigate(location?.state?.from || '/');\n  };\n\n  return (\n    <Wrap imgUrl={imageBg}>\n      {isSuccess && <Navigate to=\"/contacts\" replace={true} />}\n      <Form onSubmit={handleSubmit}>\n        <LabelWrap>\n          <label>Name</label>\n          <InputEmail\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            onChange={handleInputChange}\n            placeholder=\"enter your name\"\n          />\n          <label color={'black'}>Email</label>\n          <InputEmail\n            pattern=\"^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$\"\n            onChange={handleInputChange}\n            type=\"email\"\n            value={email}\n            name=\"email\"\n            placeholder=\"enter your email\"\n          />\n          <label color={'black'}>Password</label>\n          <InputPass\n            onChange={handleInputChange}\n            value={password}\n            minLength={7}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"enter your password\"\n          />\n        </LabelWrap>\n        <ButtonReg\n          type=\"submit\"\n          disabled={name && email && password ? false : true}\n        >\n          Register\n        </ButtonReg>\n        <ButtonBack type=\"button\" onClick={goBack}>\n          Back\n        </ButtonBack>\n      </Form>\n    </Wrap>\n  );\n}\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","Wrap","styled","props","imgUrl","Form","LabelWrap","InputEmail","InputPass","ButtonReg","ButtonBack","SignupView","useState","name","setName","email","setEmail","password","setPassword","useUserSignupMutation","userSignup","isSuccess","handleInputChange","currentTarget","handleSubmit","fn","event","preventDefault","self","this","args","arguments","apply","err","undefined","navigate","useNavigate","location","useLocation","imageBg","to","replace","onSubmit","type","onChange","placeholder","color","pattern","minLength","disabled","onClick","state","from"],"sourceRoot":""}
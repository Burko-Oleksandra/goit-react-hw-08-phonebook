{"version":3,"file":"static/js/538.585c2b36.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactsList/ContactListItem.styled.js","components/Notification/NotificationError.js","components/ContactsList/ContactListItem.js","components/Notification/NotificationDelete.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.styled.js","components/Notification/NotificationInfo.js","components/ContactForm/ContactForm.js","pages/ContactPage/contactPage.styled.js","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.styled.js","components/UserMenu/userMenu.js","components/AppBar/AppBar.js","pages/ContactPage/contactPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: 95px;\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 24px;\n  margin-left: 95px;\n  margin-bottom: 20px;\n`;\n\nexport const InputFilter = styled.input`\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  font-size: 18px;\n  width: 200px;\n  height: 10px;\n  padding: 10px;\n  border: 3px solid rgb(239, 186, 211);\n  border-radius: 4px;\n  outline: none;\n\n  &::placeholder {\n    font-size: 14px;\n    text-decoration: none;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  bottom: 42px;\n  left: 280px;\n  background-color: inherit;\n  width: 45px;\n  border: none;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/slices/filterSlice';\n\nimport { Form, Label, InputFilter, Button } from './Filter.styled';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter);\n\n  const onFilterChange = event => {\n    dispatch(setFilter(event.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <Form>\n      <Label>Filter</Label>\n      <InputFilter\n        onChange={onFilterChange}\n        value={filterValue}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contacts by name\"\n      />\n      <Button type=\"button\">\n        <BiSearchAlt size=\"1.5rem\" color=\"#efbad3\" />\n      </Button>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 240px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border: none;\n  background-color: inherit;\n`;\n","import Notiflix from 'notiflix';\n\nexport default function NotificationError() {\n  return Notiflix.Report.info('Oops 😞', 'something went wrong', 'ok', {\n    width: '200px',\n    height: '200px',\n    backgroundColor: '#ba8afa',\n    borderRadius: '16px',\n    titleFontSize: '18px',\n    messageFontSize: '16px',\n    buttonFontSize: '12px',\n    cssAnimationStyle: 'zoom',\n\n    info: {\n      svgColor: '#57209F',\n      titleColor: 'black',\n      messageColor: 'black',\n      buttonBackground: '#57209F',\n      buttonColor: 'black',\n      backOverlayColor: 'rgba(220, 220, 220, 0.6)',\n    },\n  });\n}\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useDeleteContactsMutation } from '../../redux/api/contactsApi';\nimport { MdDelete } from 'react-icons/md';\nimport { Item, Button } from './ContactListItem.styled';\nimport NotificationRemoved from 'components/Notification/NotificationDelete';\nimport NotificationError from 'components/Notification/NotificationError';\n\nexport default function ContactListItem({ name, number, id }) {\n  const [deleteContacts, { isLoading: isDeleting, isSuccess, error }] =\n    useDeleteContactsMutation();\n\n  useEffect(() => {\n    isSuccess && NotificationRemoved(name);\n    error && NotificationError();\n  }, [isSuccess, name, error]);\n\n  return (\n    <Item key={id}>\n      {name} {number}\n      <Button\n        type=\"button\"\n        onClick={() => deleteContacts(id)}\n        disabled={isDeleting}\n      >\n        <MdDelete />\n      </Button>\n    </Item>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import Notiflix from 'notiflix';\n\nexport default function NotificationRemoved(name) {\n  return Notiflix.Report.info(`${name}`, 'removed from the phonebook', 'ok', {\n    width: '200px',\n    height: '200px',\n    backgroundColor: '#ba8afa',\n    borderRadius: '16px',\n    titleFontSize: '18px',\n    messageFontSize: '16px',\n    buttonFontSize: '12px',\n    cssAnimationStyle: 'zoom',\n\n    info: {\n      svgColor: '#57209F',\n      titleColor: 'black',\n      messageColor: 'black',\n      buttonBackground: '#57209F',\n      buttonColor: 'black',\n      backOverlayColor: 'rgba(220, 220, 220, 0.6)',\n    },\n  });\n}\n","import styled from '@emotion/styled';\n\nexport const LoaderOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  justify-content: center;\n  align-items: center;\n  width: 712px;\n  height: 482px;\n`;\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 200px;\n  left: 320px;\n  display: flex;\n  width: 200px;\n`;\n","import { ProgressBar } from 'react-loader-spinner';\nimport { LoaderWrap, LoaderOverlay } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderOverlay>\n      <LoaderWrap>\n        <ProgressBar\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"progress-bar-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"progress-bar-wrapper\"\n          borderColor=\"#a163f5\"\n          barColor=\"#efbad3\"\n        />\n      </LoaderWrap>\n    </LoaderOverlay>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ol`\n  display: flex;\n  flex-direction: column;\n  width: 255px;\n  height: 380px;\n  gap: 15px;\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  font-size: 18px;\n  margin-left: 400px;\n  margin-top: -20px;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    width: 12px; /* ширина всей полосы прокрутки */\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 6px;\n    background: rgb(239, 186, 211); /* цвет зоны отслеживания */\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: rgb(161, 99, 245); /* цвет бегунка */\n    border-radius: 20px; /* округлось бегунка */\n    border: 4px solid rgb(239, 186, 211); /* отступ вокруг бегунка */\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { useGetContactQuery } from '../../redux/api/contactsApi';\nimport ContactListItem from './ContactListItem';\nimport Loader from 'components/Loader';\nimport { List } from './ContactsList.styled';\n\nexport default function ContactList() {\n  const { data, isFetching } = useGetContactQuery();\n  const filter = useSelector(state => state.filter);\n\n  const contacts =\n    data && data.filter(contact => contact.name.toLowerCase().includes(filter));\n\n  return (\n    <div>\n      {data && data.length !== 0 && (\n        <List>\n          {contacts.map(contact => (\n            <ContactListItem key={contact.id} {...contact} />\n          ))}\n        </List>\n      )}\n      {isFetching && <Loader />}\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  margin-left: 130px;\n  margin-top: 45px;\n  font-family: 'Indie Flower', cursive;\n  text-decoration-color: rgb(239, 186, 211);\n  z-index: 2;\n  color: black;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: 95px;\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n`;\n\nexport const LabelWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n`;\n\nexport const InputName = styled.input`\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  font-size: 18px;\n  width: 200px;\n  height: 10px;\n  padding: 10px;\n  border: 3px solid rgb(239, 186, 211);\n  border-radius: 4px;\n  margin-bottom: 10px;\n  outline: none;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nexport const InputNumb = styled.input`\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  font-size: 18px;\n  width: 200px;\n  height: 10px;\n  padding: 10px;\n  border: 3px solid rgb(239, 186, 211);\n  border-radius: 4px;\n  outline: none;\n  margin-bottom: 10px;\n\n  &::placeholder {\n    font-size: 14px;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  margin-left: 80px;\n  margin-bottom: 30px;\n  width: 50px;\n  border: none;\n  background-color: inherit;\n`;\n","import Notiflix from 'notiflix';\n\nexport default function NotificationInfo(name) {\n  return Notiflix.Report.info(\n    `${name} is already in contacts`,\n    'Check the correct entry!',\n    'ok',\n    {\n      width: '200px',\n      height: '200px',\n      backgroundColor: '#ba8afa',\n      borderRadius: '16px',\n      titleFontSize: '18px',\n      messageFontSize: '16px',\n      buttonFontSize: '12px',\n      cssAnimationStyle: 'zoom',\n\n      info: {\n        svgColor: '#57209F',\n        titleColor: 'black',\n        messageColor: 'black',\n        buttonBackground: '#57209F',\n        buttonColor: 'black',\n        backOverlayColor: 'rgba(220, 220, 220, 0.6)',\n      },\n    }\n  );\n}\n","import { useState, useEffect } from 'react';\n\nimport {\n  useAddContactsMutation,\n  useGetContactQuery,\n} from '../../redux/api/contactsApi';\nimport { MdAddIcCall } from 'react-icons/md';\nimport {\n  Form,\n  Text,\n  LabelWrap,\n  InputName,\n  InputNumb,\n  Button,\n} from './ContactForm.styled';\nimport NotificationInfo from 'components/Notification/NotificationInfo';\nimport NotificationError from 'components/Notification/NotificationError';\n\nexport default function ContactForm() {\n  const [addContacts, { isSuccess, error }] = useAddContactsMutation();\n  const { data } = useGetContactQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [nameForAlert, setnameForAlert] = useState('');\n\n  useEffect(() => {\n    isSuccess && NotificationInfo(` ${nameForAlert} added to contact book`);\n    error && NotificationError();\n  }, [error, isSuccess, nameForAlert]);\n\n  const handleInputChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setnameForAlert(name);\n    data.every(item => item.name.toLowerCase() !== name.toLowerCase())\n      ? addContacts({\n          name: name,\n          number: number,\n        })\n      : NotificationInfo(name);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Text>Add to contacts</Text>\n      <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <LabelWrap>\n          <label>Name</label>\n          <InputName\n            onChange={handleInputChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"enter name\"\n          />\n          <label>Number</label>\n          <InputNumb\n            onChange={handleInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"enter number\"\n          />\n        </LabelWrap>\n        <Button type=\"submit\" disabled={number && name ? false : true}>\n          <MdAddIcCall size=\"1.7rem\" color=\"#efbad3\" />\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 715px;\n  height: 480px;\n  background-image: ${props => `url(${props.imgUrl})`};\n  background-repeat: no-repeat;\n`;\n\nexport const Text = styled.p`\n  margin-left: 425px;\n  margin-top: -415px;\n  text-decoration: underline;\n  text-decoration-style: wavy;\n  text-decoration-color: rgb(239, 186, 211);\n  font-family: 'Indie Flower', cursive;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n  font-size: 32px;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Contacts = styled(Link)`\n  position: absolute;\n  top: 190px;\n  left: 20px;\n  font-family: 'Indie Flower', cursive;\n  color: black;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n  font-size: 28px;\n  writing-mode: vertical-lr;\n  transform: rotate(180deg);\n  text-decoration: none;\n`;\n","import React from 'react';\nimport { Contacts } from './Navigation.styled';\n\nexport default function Navigation() {\n  return <Contacts to=\"contacts\">Contacts</Contacts>;\n}\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  margin-left: 80px;\n  margin-top: 25px;\n  font-family: 'Indie Flower', cursive;\n  text-decoration: underline;\n  text-decoration-style: wavy;\n  text-decoration-color: rgb(239, 186, 211);\n  z-index: 2;\n  color: black;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n  font-size: 32px;\n`;\n\nexport const ButtonReg = styled.button`\n  cursor: pointer;\n  font-family: 'Indie Flower', cursive;\n  position: absolute;\n  top: 390px;\n  left: -10px;\n  text-shadow: 1px 1px 2px rgb(239, 186, 211);\n  padding: 0;\n  box-sizing: content-box;\n  min-width: 70px;\n  font-size: 28px;\n  background-color: inherit;\n  transform: rotate(270deg);\n  border: none;\n`;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { getUserName } from '../../redux/slices/authSlice';\nimport { useUserLogoutMutation } from '../../redux/api/authApi';\n\nimport { Text, ButtonReg } from './UserMenu.styled';\n\nexport default function UserMenu() {\n  const name = useSelector(getUserName);\n  const [userLogout] = useUserLogoutMutation();\n\n  return (\n    <>\n      <Text>Hello, {name}!</Text>\n      <ButtonReg\n        type=\"button\"\n        onClick={() => {\n          userLogout();\n        }}\n      >\n        Log Out\n      </ButtonReg>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu/userMenu';\n\nexport default function AppBar() {\n  return (\n    <div>\n      <Navigation />\n      <UserMenu />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { getLoggedin } from '../../redux/slices/authSlice';\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactsList';\nimport ContactForm from '../../components/ContactForm';\nimport imageBg from '../../images/contacts.png';\nimport { Wrap, Text } from './contactPage.styled';\nimport AppBar from 'components/AppBar/AppBar';\n\nexport default function ContactsView() {\n  const isLoggedin = useSelector(getLoggedin);\n  return (\n    <Wrap imgUrl={imageBg}>\n      {!isLoggedin && <Navigate to=\"/\" />}\n      {isLoggedin && <AppBar />}\n      <ContactForm />\n      <Filter />\n      <Text>Your contacts</Text>\n      <ContactList />\n    </Wrap>\n  );\n}\n"],"names":["Form","styled","Label","InputFilter","Button","Filter","dispatch","useDispatch","filterValue","useSelector","state","filter","onChange","event","setFilter","currentTarget","value","toLowerCase","type","name","placeholder","size","color","Item","NotificationError","Notiflix","width","height","backgroundColor","borderRadius","titleFontSize","messageFontSize","buttonFontSize","cssAnimationStyle","info","svgColor","titleColor","messageColor","buttonBackground","buttonColor","backOverlayColor","ContactListItem","number","id","useDeleteContactsMutation","deleteContacts","isDeleting","isLoading","isSuccess","error","useEffect","NotificationRemoved","onClick","disabled","LoaderOverlay","LoaderWrap","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","List","ContactList","useGetContactQuery","data","isFetching","contacts","contact","includes","length","map","Text","LabelWrap","InputName","InputNumb","NotificationInfo","ContactForm","useAddContactsMutation","addContacts","useState","setName","setNumber","nameForAlert","setnameForAlert","handleInputChange","autoComplete","onSubmit","preventDefault","every","item","pattern","title","required","Wrap","props","imgUrl","Contacts","Link","Navigation","to","ButtonReg","UserMenu","getUserName","useUserLogoutMutation","userLogout","AppBar","ContactsView","isLoggedin","getLoggedin","imageBg"],"sourceRoot":""}